RED='\033[0;31m'
NC='\033[0m'
BR='\033[0;33m'
GR='\033[0;32m'
LGR='\033[1;32m'
LRED='\033[1;31m'
CY='\033[0;36m'

showLoading() {
  mypid=$!
  Analyzing=$1

  echo -ne "$Analyzing\r"

  while kill -0 $mypid 2>/dev/null; do
    echo -ne "${BR}[!]${NC} $Analyzing.\r"
    sleep 0.5
    echo -ne "${BR}[!]${NC} $Analyzing..\r"
    sleep 0.5
    echo -ne "${BR}[!]${NC} $Analyzing...\r"
    sleep 0.5
    echo -ne "\r\033[K"
    echo -ne "${BR}[!]${NC} $Analyzing\r"
    sleep 0.5
  done

  echo -e "${BR}[!]${NC} $Analyzing...${GR}FINISHED${NC}"
}

fileSizes() {

	#TYPED 1
	DOWNLOADSIZE="$(echo `find /var/mobile/Media/Downloads/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	LOGSSIZE="$(echo `find /var/logs/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	LOGSSIZE2="$(echo `find /var/log/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	LOGSSIZE3="$(echo `find /var/mobile/Library/Logs/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	APPLOGSIZE="$(echo `find /private/var/mobile/Containers/Data/Application/ -name "*.log" -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	TMPSIZE="$(echo `find /var/tmp/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	CACHESIZE="$(echo `find /var/mobile/Library/Caches/ ! -name *. -not -path "/var/mobile/Library/Caches/CloudKit/*" -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	CYDIASIZE="$(echo `find /var/mobile/Documents/CyDown/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	CYDIASIZE2="$(echo `find /var/cache/apt/archives/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	IPASIZE="$(echo `find /var/mobile/Library/Application\ Support/Containers/com.iphonecake.appcake2/Documents/Inbox/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	SMSSIZE="$(echo `find /var/mobile/Library/SMS/Attachments/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	ASSETSSIZE="$(echo `find /var/mobile/Library/Assets -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc &> /dev/null)"
	SIZE=$((APPLOGSIZE + TMPSIZE + CYDIASIZE + CACHESIZE + CYDIASIZE2 + IPASIZE + SMSSIZE + ASSETSSIZE + LOGSSIZE + LOGSSIZE2 + LOGSSIZE3 + DOWNLOADSIZE))

	SIZEDIV=$((SIZE / 1024 /1024))

	#TYPED 2
	TMPSIZE2="$(echo `find /var/tmp -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	CACHESIZE2="$(echo `find /var/mobile/Library/Caches/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	SIZE2=$((APPLOGSIZE + TMPSIZE2 + CACHESIZE2 + SMSSIZE + CYDIASIZE + CYDIASIZE2 + IPASIZE + LOGSSIZE + LOGSSIZE2 + LOGSSIZE3 + DOWNLOADSIZE))
	SIZEDIV2=$((SIZE2 / 1024 / 1024))

	#TYPED 3
	SIZE3=$((ASSETSSIZE))
	SIZEDIV3=$((SIZE3 / 1024 / 1024))

	#OTHER
	ZERO="$(echo 0)"


}

clear & showLoading "Loading TCLEANER"
sleep 2
echo -e "${BR}[!]${NC} Developed by Noah Little (@noahacks)"
echo -e "${BR}[!]${NC} Please don't rebrand this product and re-release!"
sleep 2
if [[ $EUID -ne 0 ]]; then
   echo -e "${BR}[!]${NC} TCLEANER requires root privileges, please use ${RED}sudo ${0}${NC} Or login as root!" 
   exit 1
fi
sleep 2



#MENU

showMenu(){
clear
		echo "-----------------------------------------------------"
		echo -e "${BR}                      TCLEANER${NC}"
		echo -e "${BR}                noahlittle.github.io${NC}"
		echo -e "${LGR}v1.0.4${NC}"
		echo "-----------------------------------------------------"
		echo -e "${BR}[1]${NC} Clean All ${RED}(DANGEROUS)${NC}"
		echo -e "${BR}[2]${NC} Clean ${GR}(SAFE)${NC}"
		echo -e "${BR}[3]${NC} Remove ASSETS ${RED}(BREAKS SIRI)${NC}"
		echo ""
		echo -e "${BR}[0]${NC} Exit"
		echo "-----------------------------------------------------"
		echo -e "${BR}[!]${NC}$(df -B1 | grep 'disk0s1s1' | cut -c49-52) Used on / Partition."
		echo -e "${BR}[!]${NC}$(df -B1 | grep 'disk0s1s2' | cut -c49-52) Used on /private/var/ Partition."
		echo "-----------------------------------------------------"
		echo ""
		read -p "Option: " mc
return $mc
}


#OPTIONCODE

while [[ "$m" != "0" ]]
do
    if [[ "$m" == "1" ]]; then
        
		clear & showLoading "Analyzing"
		fileSizes
		echo -e "${BR}[!]${NC} Cleaning TMP"
		rm -rf /var/tmp/*
		echo -e "${BR}[!]${NC} Cleaning Downloads"
		rm -rf /var/mobile/Media/Downloads/*
		echo -e "${BR}[!]${NC} Cleaning Log Files"
		find /var/logs/ -name "*.log*" -exec rm {} \;
		find /var/log/ -name "*.log*" -exec rm {} \;
		rm -rf /var/mobile/diskpie.last
		rm -rf /var/mobile/.bash_history
		find /var/mobile/Library/Logs/ -name "*.log*" -exec rm {} \;
		find /var/mobile/Containers/Data/Application/ -name "*.log" -exec rm {} \;
		echo -e "${BR}[!]${NC} Cleaning Caches"
		rm -rf /var/mobile/Library/Caches/*
		echo -e "${BR}[!]${NC} Cleaning Cydia"
		rm -rf /var/mobile/Documents/CyDown/*
		rm -rf /var/cache/apt/archives/partial/*.deb
		rm -rf /var/cache/apt/archives/*.deb
		echo -e "${BR}[!]${NC} Cleaning IPA Files"
		rm -rf /var/mobile/Library/Application\ Support/Containers/com.iphonecake.appcake2/Documents/Inbox/*.ipa
		echo -e "${BR}[!]${NC} Cleaning Messages"
		rm -rf /var/mobile/Library/SMS/Attachments/*
		echo -e "${BR}[!]${NC} Cleaning Assets"
		rm -rf /var/mobile/Library/Assets/ &> /dev/null
 		clear

		echo -e "${BR}[!]${NC} Cleaned ${LGR}${SIZEDIV}${NC} Megabytes."
		echo ""
read -p "Press <Enter> to continue"

		#ENDED 1


elif [[ "$m" == "2" ]]; then

		clear & showLoading "Analyzing"
		fileSizes
		echo -e "${BR}[!]${NC} Cleaning Caches"
		rm -rf /var/mobile/Library/Caches/*
		echo -e "${BR}[!]${NC} Cleaning Downloads"
		rm -rf /var/mobile/Media/Downloads/*
		echo -e "${BR}[!]${NC} Cleaning TMP"
		rm -rf /var/tmp/*
		echo -e "${BR}[!]${NC} Cleaning Log Files"
		ffind /var/logs/ -name "*.log*" -exec rm {} \;
		find /var/log/ -name "*.log*" -exec rm {} \;
		find /var/mobile/Library/Logs/ -name "*.log*" -exec rm {} \;
		find /var/mobile/Containers/Data/Application/ -name "*.log" -exec rm {} \;
		rm -rf /var/mobile/diskpie.last
		rm -rf /var/mobile/.bash_history
		echo -e "${BR}[!]${NC} Cleaning Messages"
		rm -rf /var/mobile/Library/SMS/Attachments/*
		echo -e "${BR}[!]${NC} Cleaning Cydia"
		rm -rf /var/mobile/Documents/CyDown/*
		rm -rf /var/cache/apt/archives/partial/*.deb
		rm -rf /var/cache/apt/archives/*.deb
		echo -e "${BR}[!]${NC} Cleaning IPA Files"
		rm -rf /var/mobile/Library/Application\ Support/Containers/com.iphonecake.appcake2/Documents/Inbox/*.ipa
		clear
	
		echo -e "${BR}[!]${NC} Cleaned ${LGR}${SIZEDIV2}${NC} Megabytes."
read -p "Press <Enter> to continue"
	
		#ENDED 2

    elif [[ "$m" == "3" ]]; then

		clear
		read -p "This is an irreversible change and will cause Siri to be unusable. But you will recover around a GB of space. If you wish to continue, Press <Enter>"
		echo -e "${BR}[!]${NC} Removing Assets"
		clear & showLoading "Analyzing"
		fileSizes
		rm -rf /var/mobile/Library/Assets/ &> /dev/null
		echo -e "${BR}[!]${NC} Cleaned ${LGR}${SIZEDIV3}${NC} Megabytes."
		echo ""
		read -p "Press <Enter> to continue"

		#ENDED 3

    fi
    showMenu
    m=$?

done
clear
exit 0;
