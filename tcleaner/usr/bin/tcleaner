#!/bin/bash


#COLOURS

RED='\033[0;31m'
NC='\033[0m'
BR='\033[0;33m'
GR='\033[0;32m'
LGR='\033[1;32m'
LRED='\033[1;31m'
CY='\033[0;36m'

#TAGS

DBAS=${CY}[**]${NC}
INFO=${BR}[!]${NC}
ERROR=${RED}[*${LRED}*${RED}]${NC}
LOAD=${GR}[*]${NC}
PROG1="[    ]"
PROG2="[${GR}>${NC}   ]"
PROG3="[${GR}=>${NC}  ]"
PROG4="[${GR}==>${NC} ]"
PROG5="[${GR}===>${NC}]"
PROG6="[${GR}DONE${NC}]"
ENTER="[${CY}>${NC}]"

showLoading() {
  mypid=$!
  Analyzing=$1

  echo -ne "$Analyzing\r"

  while kill -0 $mypid 2>/dev/null; do
    echo -ne "${LOAD} $Analyzing ${PROG1}\r"
    sleep 0.1
    echo -ne "${LOAD} $Analyzing ${PROG2}\r"
    sleep 0.1
    echo -ne "${LOAD} $Analyzing ${PROG3}\r"
    sleep 0.1
    echo -ne "${LOAD} $Analyzing ${PROG4}\r"
    sleep 0.1
    echo -ne "${LOAD} $Analyzing ${PROG5}\r"
    sleep 0.1
    echo -ne "\r\033[K"
    echo -ne "${LOAD} $Analyzing ${PROG6}\r"
  done

  echo -e "${LOAD} $Analyzing ${PROG6}"
}


fileSizes() {

		#SAFARI CHUNK
		if [ -d "/var/mobile/Containers/Data/Application/" ]; then
		SAFLOC="$(find /var/mobile/Containers/Data/Application/ -name "Safari" -ls | cut -d/ -f 7)"
		else
		SAFLOC=0
		fi

		if [ -d "/var/mobile/Containers/Data/Application/${SAFLOC}/Library/Safari/Thumbnails/" ]; then
		SAFARITHUMBNAILSIZE="$(echo `find /var/mobile/Containers/Data/Application/${SAFLOC}/Library/Safari/Thumbnails/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
		else
		SAFARITHUMBNAILSIZE=0
		fi
		
		if [ -d "/var/mobile/Containers/Data/Application/${SAFLOC}/Library/Caches/" ]; then
		SAFARICACHESIZE="$(echo `find /var/mobile/Containers/Data/Application/${SAFLOC}/Library/Caches/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
		else
		SAFARICACHESIZE=0
		fi

		if [ -f "/var/mobile/Containers/Data/Application/${SAFLOC}/Library/Safari/History.db-wal" ]; then
		SAFARIHISTORY1="$(stat --printf="%s" /var/mobile/Containers/Data/Application/${SAFLOC}/Library/Safari/History.db-wal)"
		else
		SAFARIHISTORY1=0
		fi

		if [ -f "/var/mobile/Containers/Data/Application/${SAFLOC}/Library/Safari/History.db" ]; then
		SAFARIHISTORY2="$(stat --printf="%s" /var/mobile/Containers/Data/Application/${SAFLOC}/Library/Safari/History.db)"
		else
		SAFARIHISTORY2=0
		fi

		if [ -f "/var/mobile/Containers/Data/Application/${SAFLOC}/Library/Safari/History.db-shm" ]; then
		SAFARIHISTORY3="$(stat --printf="%s" /var/mobile/Containers/Data/Application/${SAFLOC}/Library/Safari/History.db-shm)"
		else
		SAFARIHISTORY3=0
		fi
		
		if [ -f "/var/mobile/Containers/Data/Application/${SAFLOC}/Library/Safari/SuspendState.plist" ]; then
		SAFARIHISTORY4="$(stat --printf="%s" /var/mobile/Containers/Data/Application/${SAFLOC}/Library/Safari/SuspendState.plist)"
		else
		SAFARIHISTORY4=0
		fi

		if [ -d "/var/tmp/" ]; then
		TMPSIZE="$(echo `find /var/tmp/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
		else
		TMPSIZE=0
		fi
		
		if [ -d "/var/mobile/Media/Downloads/" ]; then
		DOWNLOADSIZE="$(echo `find /var/mobile/Media/Downloads/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
		else
		DOWNLOADSIZE=0
		fi
		
		if [ -d "/var/logs/" ]; then
		LOGSSIZE="$(echo `find /var/logs/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
		else
		LOGSSIZE=0
		fi
		
		if [ -d "/var/log/" ]; then
		LOGSSIZE2="$(echo `find /var/log/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
		else
		LOGSSIZE2=0
		fi

		if [ -d "/var/mobile/Library/Logs/" ]; then
		LOGSSIZE3="$(echo `find /var/mobile/Library/Logs/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
		else
		LOGSSIZE3=0
		fi

		if [ -d "/private/var/mobile/Containers/Data/Application/" ]; then
		APPLOGSIZE="$(echo `find /private/var/mobile/Containers/Data/Application/ -name "*.log" -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
		else
		APPLOGSIZE=0
		fi

		CACHESIZE="$(echo `find /var/mobile/Library/Caches/ ! -name *. -not -path "/var/mobile/Library/Caches/CloudKit/*" -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"

		if [ -d "/var/mobile/Documents/CyDown/" ]; then
		CYDIASIZE="$(echo `find /var/mobile/Documents/CyDown/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
		else
		CYDIASIZE=0
		fi

		if [ -d "/var/cache/apt/archives/" ]; then
		CYDIASIZE2="$(echo `find /var/cache/apt/archives/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
		else
		CYDIASIZE2=0
		fi

		if [ -d "/var/mobile/Library/Application\ Support/Containers/com.iphonecake.appcake2/Documents/Inbox/" ]; then
		IPASIZE="$(echo `find /var/mobile/Library/Application\ Support/Containers/com.iphonecake.appcake2/Documents/Inbox/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
		else
		IPASIZE=0
		fi

		SMSSIZE="$(echo `find /var/mobile/Library/SMS/Attachments/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"

		if [ -d "/var/mobile/Library/Assets/" ]; then
		ASSETSSIZE="$(echo `find /var/mobile/Library/Assets/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
		else
		ASSETSSIZE=0
		fi

		if [ -d "/var/mobile/Media/PhotoData/Sync/100SYNCD" ]; then
		PHOTOSIZE="$(echo `find /var/mobile/Media/PhotoData/Sync/100SYNCD/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
		else
		PHOTOSIZE=0
		fi
		
		if [ -d "/var/mobile/Media/PhotoData/Thumbnails/V2/PhotoData/Sync/100SYNCD/" ]; then
		THUMBNAILSIZE="$(echo `find /var/mobile/Media/PhotoData/Thumbnails/V2/PhotoData/Sync/100SYNCD/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
		else
		THUMBNAILSIZE=0
		fi

		SIZE=$((APPLOGSIZE + TMPSIZE + CYDIASIZE + CACHESIZE + CYDIASIZE2 + IPASIZE + SMSSIZE + ASSETSSIZE + LOGSSIZE + LOGSSIZE2 + LOGSSIZE3 + DOWNLOADSIZE + PHOTOSIZE + THUMBNAILSIZE + SAFARICACHESIZE + SAFARIHISTORY4 + SAFARIHISTORY3 + SAFARIHISTORY2 + SAFARIHISTORY1))
		SIZEDIV="$(echo ${SIZE} | awk '{ size = $1 / 1024 / 1024 ; print size}')"

	 	SIZE2="$((APPLOGSIZE + TMPSIZE2 + CACHESIZE2 + SMSSIZE + CYDIASIZE + CYDIASIZE2 + IPASIZE + LOGSSIZE + LOGSSIZE2 + LOGSSIZE3 + DOWNLOADSIZE + PHOTOSIZE + THUMBNAILSIZE + SAFARICACHESIZE + SAFARIHISTORY4 + SAFARIHISTORY3 + SAFARIHISTORY2 + SAFARIHISTORY1))"
		SIZEDIV2="$(echo ${SIZE2} | awk '{ size = $1 / 1024 / 1024 ; print size}')"

	 	SIZE3="$((ASSETSSIZE))"
	  	SIZEDIV3="$(echo ${SIZE3} | awk '{ size = $1 / 1024 / 1024 ; print size}')"

}


		cleantmp() {

		rm -rf /var/tmp/* &> /dev/null

		}

		cleandownloads(){


		rm -rf /var/mobile/Media/Downloads/* &> /dev/null

		}

		cleanlogs(){
		find /var/logs/ -name "*.log*" -exec rm {} \; &> /dev/null
		find /var/log/ -name "*.log*" -exec rm {} \; &> /dev/null
		rm /var/mobile/.bash_history &> /dev/null
		find /var/mobile/Library/Logs/ -name "*.log*" -exec rm {} \;  &> /dev/null

		}

		cleanapplogs(){

		find /var/mobile/Containers/Data/Application/ -name "*.log" -exec rm {} \;  &> /dev/null

		}

		cleancaches(){

		rm -rf /var/mobile/Library/Caches/* &> /dev/null

		}

		cleancydia(){
		
		rm -rf /var/mobile/Documents/CyDown/* &> /dev/null
		rm -rf /var/cache/apt/archives/partial/*.deb &> /dev/null
		rm -rf /var/cache/apt/archives/*.deb &> /dev/null

		}

		cleanipa(){
		
		rm -rf /var/mobile/Library/Application\ Support/Containers/com.iphonecake.appcake2/Documents/Inbox/*.ipa &> /dev/null
		
		}

		cleansms(){

		rm -rf /var/mobile/Library/SMS/Attachments/* &> /dev/null

		}

		cleanassets(){

		rm -rf /var/mobile/Library/Assets/ &> /dev/null

		}

		cleanphotos(){

		rm -rf /var/mobile/Media/PhotoData/Sync/100SYNCD/ &> /dev/null

		}

		cleanthumbnails(){

		rm -rf /var/mobile/Media/PhotoData/Thumbnails/V2/PhotoData/Sync/100SYNCD/ &> /dev/null

		}

		cleansafari(){

		rm -rf /var/mobile/Containers/Data/Application/${SAFLOC}/Library/Caches/* &> /dev/null &> /dev/null
		rm -rf /var/mobile/Containers/Data/Application/${SAFLOC}/Library/Safari/History.db-wal &> /dev/null
		rm -rf /var/mobile/Containers/Data/Application/${SAFLOC}/Library/Safari/History.db &> /dev/null
		rm -rf /var/mobile/Containers/Data/Application/${SAFLOC}/Library/Safari/History.db-shm &> /dev/null
		rm -rf /var/mobile/Containers/Data/Application/${SAFLOC}/Library/Safari/SuspendState.plist &> /dev/null
		rm -rf /var/mobile/Containers/Data/Application/${SAFLOC}/Library/Safari/Thumbnails/* &> /dev/null

		}



#CHECKS

clear
echo -e "${DBAS} Loading TCLEANER"
sleep 1
echo ""
echo -e "${INFO} Developed by Noah Little (@noahacks)"
echo -e "${INFO} Please don't rebrand this product and re-release!"
sleep 2
if [[ $EUID -ne 0 ]]; then
echo -e "${ERROR} TCLEANER requires root privileges, please use ${RED}sudo ${0}${NC} Or login as root!" 
exit 1
fi
if [ ! -f /usr/bin/bc ]; then
echo "${ERROR} \"usr/bin/bc\" Does not exist. Exiting. "
exit 1
fi

#CHECKS PASSED, CONTINUING.

#MENU

showMenu(){
clear
		echo "-----------------------------------------------------"
		echo -e "${BR}                    .:TCLEANER:.${NC}"
		echo -e "${BR}                noahlittle.github.io${NC}"
		echo -e "${LGR}v1.2.2${NC}"
		echo "-----------------------------------------------------"
		echo -e "${BR}[1]${NC} Clean All [${RED}DANGEROUS${NC}]"
		echo -e "${BR}[2]${NC} Clean [${GR}SAFE${NC}]"
		echo -e "${BR}[3]${NC} Remove Assets Folder [${RED}DANGEROUS${NC}]"
		echo ""
		echo -e "${BR}[0]${NC} Exit"
		echo "-----------------------------------------------------"
		echo -e "${INFO} ${GR}$(df /dev/disk0s1s1 | awk '{print $5}' | tail -n 1)${NC} Used on ${CY}/${NC} Partition."
		echo -e "${INFO} ${GR}$(df /dev/disk0s1s2 | awk '{print $5}' | tail -n 1)${NC} Used on ${CY}/private/var/${NC} Partition."
		echo "-----------------------------------------------------"
		echo ""
		echo -ne "${ENTER} Option: "
		read -p "" mc
return $mc
}


#OPTIONCODE

while [[ "$m" != "0" ]]
do
    if [[ "$m" == "1" ]]; then
    	clear
		read -r -p "Are you sure? [y/N] " response
		if [[ "$response" =~ ^([yY][eE][sS]|[yY])+$ ]]
		then
		clear
		else
		clear
		showMenu
		fi

		echo -e "${DBAS} Checking File System" & fileSizes

		echo ""

		cleantmp & showLoading "Cleaning TMP"

		cleandownloads & showLoading "Cleaning Downloads"
		
		cleanlogs & showLoading "Cleaning Logs"
		
		cleanapplogs & showLoading "Cleaning App Logs"
		
		cleancaches & showLoading "Cleaning Caches"

		cleancydia & showLoading "Cleaning Cydia"

		cleanipa & showLoading "Cleaning iPA Files"

		cleansms & showLoading "Cleaning SMS"

		cleanassets & showLoading "Cleaning Assets"

		cleanphotos & showLoading "Cleaning Photos"

		cleanthumbnails & showLoading "Cleaning Thumbnails"

		cleansafari & showLoading "Cleaning Safari"

		clear
		echo -e "${INFO} Cleaned ${LGR}${SIZEDIV}${NC} Megabytes."
		echo ""
		echo -e -n "${ENTER} Press <Enter> to continue"
		read

		#ENDED 1


elif [[ "$m" == "2" ]]; then

		clear

		echo -e "${DBAS} Checking File System" & fileSizes

		echo ""

		cleantmp & showLoading "Cleaning TMP"

		cleandownloads & showLoading "Cleaning Downloads"

		cleanlogs & showLoading "Cleaning Logs"

		cleanapplogs & showLoading "Cleaning App Logs"

		cleancaches & showLoading "Cleaning Caches"

		cleancydia & showLoading "Cleaning Cydia"

		cleanipa & showLoading "Cleaning iPA Files"

		cleansms & showLoading "Cleaning SMS"

		cleanphotos & showLoading "Cleaning Photos"

		cleanthumbnails & showLoading "Cleaning Thumbnails"

		clear
		echo -e "${INFO} Cleaned ${LGR}${SIZEDIV2}${NC} Megabytes."
		echo ""
		echo -e -n "${ENTER} Press <Enter> to continue"
		read
	
		#ENDED 2

elif [[ "$m" == "3" ]]; then

    	clear
		read -r -p "Are you sure? [y/N] " response
		if [[ "$response" =~ ^([yY][eE][sS]|[yY])+$ ]]
		then
		clear
		else
		clear
		showMenu
		fi

		clear

		echo -e "${DBAS} Checking File System" & fileSizes

		echo ""

		cleanassets & showLoading "Cleaning Assets"

		clear
		echo -e "${INFO} Cleaned ${LGR}${SIZEDIV3}${NC} Megabytes."
		echo ""
		echo -e -n "${ENTER} Press <Enter> to continue"
		read

		#ENDED 3

    fi
    showMenu
    m=$?

done
clear
exit 0;
