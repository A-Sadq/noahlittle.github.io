#!/bin/bash
RED='\033[0;31m'
NC='\033[0m'
BR='\033[0;33m'
GR='\033[0;32m'
LGR='\033[1;32m'
LRED='\033[1;31m'
CY='\033[0;36m'


showLoading() {
  mypid=$!
  Analyzing=$1

  echo -ne "$Analyzing\r"

  while kill -0 $mypid 2>/dev/null; do
    echo -ne "${BR}[!]${NC} $Analyzing.\r"
    sleep 0.5
    echo -ne "${BR}[!]${NC} $Analyzing..\r"
    sleep 0.5
    echo -ne "${BR}[!]${NC} $Analyzing...\r"
    sleep 0.5
    echo -ne "\r\033[K"
    echo -ne "${BR}[!]${NC} $Analyzing\r"
    sleep 0.5
  done

  echo -e "${BR}[!]${NC} $Analyzing...${GR}FINISHED${NC}"
}


fileSizes() {

	#TYPED 1
	if [ -d "/var/mobile/Media/Downloads/" ]; then
	DOWNLOADSIZE="$(echo `find /var/mobile/Media/Downloads/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	fi	
	LOGSSIZE="$(echo `find /var/logs/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	LOGSSIZE2="$(echo `find /var/log/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	LOGSSIZE3="$(echo `find /var/mobile/Library/Logs/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	if [ -d "/private/var/mobile/Containers/Data/Application/" ]; then
	APPLOGSIZE="$(echo `find /private/var/mobile/Containers/Data/Application/ -name "*.log" -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	fi
	TMPSIZE="$(echo `find /var/tmp/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
        if [ -d "/var/mobile/Library/Caches/" ]; then
	CACHESIZE="$(echo `find /var/mobile/Library/Caches/ ! -name *. -not -path "/var/mobile/Library/Caches/CloudKit/*" -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	fi
	if [ -d "/var/mobile/Documents/CyDown/" ]; then
	CYDIASIZE="$(echo `find /var/mobile/Documents/CyDown/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	fi
	CYDIASIZE2="$(echo `find /var/cache/apt/archives/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	if [ -d "/var/mobile/Library/Application\ Support/Containers/com.iphonecake.appcake2/Documents/Inbox/" ]; then
	IPASIZE="$(echo `find /var/mobile/Library/Application\ Support/Containers/com.iphonecake.appcake2/Documents/Inbox/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	fi
	if [ -d "/var/mobile/Library/SMS/Attachments/" ]; then
	SMSSIZE="$(echo `find /var/mobile/Library/SMS/Attachments/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	fi
	if [ -d "/var/mobile/Library/Assets" ]; then
	ASSETSSIZE="$(echo `find /var/mobile/Library/Assets -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	fi
	SIZE=$((APPLOGSIZE + TMPSIZE + CYDIASIZE + CACHESIZE + CYDIASIZE2 + IPASIZE + SMSSIZE + ASSETSSIZE + LOGSSIZE + LOGSSIZE2 + LOGSSIZE3 + DOWNLOADSIZE))

	SIZEDIV=$((SIZE / 1024 /1024))

	#TYPED 2
	TMPSIZE2="$(echo `find /var/tmp -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	CACHESIZE2="$(echo `find /var/mobile/Library/Caches/ -type f -exec stat -c %s {} \; | tr '\n' '+' | sed 's/+$//g'` | bc)"
	SIZE2=$((APPLOGSIZE + TMPSIZE2 + CACHESIZE2 + SMSSIZE + CYDIASIZE + CYDIASIZE2 + IPASIZE + LOGSSIZE + LOGSSIZE2 + LOGSSIZE3 + DOWNLOADSIZE))
	SIZEDIV2=$((SIZE2 / 1024 / 1024))

	#TYPED 3
	SIZE3=$((ASSETSSIZE))
	SIZEDIV3=$((SIZE3 / 1024 / 1024))

	#OTHER
	ZERO="$(echo 0)"

}


		cleantmp() {

		rm -rf /var/tmp/* &> /dev/null

		}

		cleandownloads(){


		rm -rf /var/mobile/Media/Downloads/* &> /dev/null

		}

		cleanlogs(){
		find /var/logs/ -name "*.log*" -exec rm {} \; &> /dev/null
		find /var/log/ -name "*.log*" -exec rm {} \; &> /dev/null
		rm /var/mobile/.bash_history &> /dev/null
		find /var/mobile/Library/Logs/ -name "*.log*" -exec rm {} \;  &> /dev/null

		}

		cleanapplogs(){

		find /var/mobile/Containers/Data/Application/ -name "*.log" -exec rm {} \;  &> /dev/null

		}

		cleancaches(){

		rm -rf /var/mobile/Library/Caches/* &> /dev/null

		}

		cleancydia(){
		
		rm -rf /var/mobile/Documents/CyDown/* &> /dev/null
		rm -rf /var/cache/apt/archives/partial/*.deb
		rm -rf /var/cache/apt/archives/*.deb &> /dev/null

		}

		cleanipa(){
		
		rm -rf /var/mobile/Library/Application\ Support/Containers/com.iphonecake.appcake2/Documents/Inbox/*.ipa &> /dev/null
		
		}

		cleansms(){

		rm -rf /var/mobile/Library/SMS/Attachments/* &> /dev/null

		}

		cleanassets(){

		rm -rf /var/mobile/Library/Assets/ &> /dev/null

		}



#CHECKS

clear & showLoading "Loading TCLEANER"
sleep 1
echo -e "${BR}[!]${NC} Developed by Noah Little (@noahacks)"
echo -e "${BR}[!]${NC} Please don't rebrand this product and re-release!"
sleep 2
if [[ $EUID -ne 0 ]]; then
   echo -e "${BR}[!]${NC} TCLEANER requires root privileges, please use ${RED}sudo ${0}${NC} Or login as root!" 
   exit 1
fi
if [ ! -f /usr/bin/bc ]; then
    echo "\"usr/bin/bc\" Does not exist. Exiting. "
    exit 1
fi

#CHECKS PASSED, CONTINUING.

#MENU

showMenu(){
clear
		echo "-----------------------------------------------------"
		echo -e "${BR}                    .:TCLEANER:.${NC}"
		echo -e "${BR}                noahlittle.github.io${NC}"
		echo -e "${LGR}v1.1.3${NC}"
		echo "-----------------------------------------------------"
		echo -e "${BR}[1]${NC} Clean All ${RED}(DANGEROUS)${NC}"
		echo -e "${BR}[2]${NC} Clean ${GR}(SAFE)${NC}"
		echo -e "${BR}[3]${NC} Remove ASSETS ${RED}(BREAKS SIRI)${NC}"
		echo ""
		echo -e "${BR}[0]${NC} Exit"
		echo "-----------------------------------------------------"
		echo -e "${BR}[!]${NC} $(df /dev/disk0s1s1 | awk '{print $5}' | tail -n 1) Used on / Partition."
		echo -e "${BR}[!]${NC} $(df /dev/disk0s1s2 | awk '{print $5}' | tail -n 1) Used on /private/var/ Partition."
		echo "-----------------------------------------------------"
		echo ""
		read -p "Option: " mc
return $mc
}


#OPTIONCODE

while [[ "$m" != "0" ]]
do
    if [[ "$m" == "1" ]]; then
    	clear
		read -r -p "Are you sure? [y/N] " response
		if [[ "$response" =~ ^([yY][eE][sS]|[yY])+$ ]]
		then
		clear
		else
		clear
		showMenu
		fi

		echo -e "${CY}[**]${NC} Checking File System" & fileSizes

		echo ""

		cleantmp & showLoading "Cleaning TMP"

		cleandownloads & showLoading "Cleaning Downloads"
		
		cleanlogs & showLoading "Cleaning Logs"
		
		cleanapplogs & showLoading "Cleaning App Logs"
		
		cleancaches & showLoading "Cleaning Caches"

		cleancydia & showLoading "Cleaning Cydia"

		cleanipa & showLoading "Cleaning iPA Files"

		cleansms & showLoading "Cleaning SMS"

		cleanassets & showLoading "Cleaning Assets"

		clear
		echo -e "${BR}[!]${NC} Cleaned ${LGR}${SIZEDIV}${NC} Megabytes."
		echo ""
		echo -e -n "${BR}[!]${NC} Press <Enter> to continue"
		read

		#ENDED 1


elif [[ "$m" == "2" ]]; then

		clear

		echo -e "${CY}[**]${NC} Checking File System" & fileSizes

		echo ""

		cleantmp & showLoading "Cleaning TMP"

		cleandownloads & showLoading "Cleaning Downloads"

		cleanlogs & showLoading "Cleaning Logs"

		cleanapplogs & showLoading "Cleaning App Logs"

		cleancaches & showLoading "Cleaning Caches"

		cleancydia & showLoading "Cleaning Cydia"

		cleanipa & showLoading "Cleaning iPA Files"

		cleansms & showLoading "Cleaning SMS"

		clear
		echo -e "${BR}[!]${NC} Cleaned ${LGR}${SIZEDIV2}${NC} Megabytes."
		echo ""
		echo -e -n "${BR}[!]${NC} Press <Enter> to continue"
		read
	
		#ENDED 2

elif [[ "$m" == "3" ]]; then

    	clear
		read -r -p "Are you sure? [y/N] " response
		if [[ "$response" =~ ^([yY][eE][sS]|[yY])+$ ]]
		then
		clear
		else
		clear
		showMenu
		fi

		clear

		echo -e "${CY}[**]${NC} Checking File System" & fileSizes

		echo ""

		cleanassets & showLoading "Cleaning Assets"

		clear
		echo -e "${BR}[!]${NC} Cleaned ${LGR}${SIZEDIV3}${NC} Megabytes."
		echo ""
		echo -e -n "${BR}[!]${NC} Press <Enter> to continue"
		read

		#ENDED 3

    fi
    showMenu
    m=$?

done
clear
exit 0;
