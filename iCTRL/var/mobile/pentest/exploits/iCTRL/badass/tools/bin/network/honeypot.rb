#!/usr/bin/env ruby
###########################################################################
###########################################################################
##  Copyright The Resistance (C) 1995-2011                               ##
##  Author: blass                                                        ##
##  blass[at]sdf.lonestar.org @ twitter.com/Blass_o_rama                 ##
##  Badass 1.0                                                           ##
##  This file is part of Badass.                                         ##
##  Badass is free software: you can redistribute it and/or modify       ##
##  it under the terms of the GNU General Public License as published by ##
##  the Free Software Foundation, either version 3 of the License, or    ##
##  (at your option) any later version.                                  ##
##  Badass is distributed in the hope that it will be useful,            ##
##  but WITHOUT ANY WARRANTY; without even the implied warranty of       ##
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        ##
##  GNU General Public License for more details.                         ##
##  You should have received a copy of the GNU General Public License    ##
##  along with Badass. If not, see http://www.gnu.org/licenses/          ##
###########################################################################
###########################################################################
## This script was based on pentbox 1.4 and re-written by blass          ##
###########################################################################
###########################################################################

module Network_pb
class Honeypot_pb
def initialize()

  dir = File.dirname(__FILE__)
  require "socket"

  puts ""
  title " Honeypot "
  puts ""
  puts ""
  title "   -==Honeypot==-          "
  title "                           "
  title "1- Fast Auto Configuration "
  title "                           "
  title "2- Manual Configuration    "
  title "                           "
  puts ""
  warning "   Your Choice: "
  configuration = gets_pb.chomp
  
  def honeyconfig(port, message, sound, log, logname) # Function to launch the Honeypot.
    begin
      tcpserver = TCPServer.new("", port)
      if tcpserver
        puts ""
        puts "  HONEYPOT ACTIVATED ON PORT #{port} (#{Time.now.to_s})"
        puts ""
        if log == "y" || log == "Y"
          # If log is enabled, writes Honeypot activation time.
          begin
            File.open(logname, "a") do |logf|
              logf.puts "### Badass Honeypot log ###"
              logf.puts ""
              logf.puts "HONEYPOT ACTIVATED ON PORT #{port} (#{Time.now.to_s})"
              logf.puts ""
            end
          rescue Errno::ENOENT
            puts ""
            puts " Saving log error: No such file or directory...\n"
            puts ""
          end
        end
        loop do
          socket = tcpserver.accept
          sleep(1) # It is to solve possible DoS Attacks.
          if socket
            Thread.new do
              remotePort, remoteIp = Socket.unpack_sockaddr_in(socket.getpeername) # Gets the remote port and ip.
              puts ""
              puts " INTRUSION ATTEMPT DETECTED! from #{remoteIp}:#{remotePort} (#{Time.now.to_s})"
              puts " __________________________"
              reciv = socket.recv(1000).to_s
              puts reciv
              if sound == "y" || sound == "Y"
                # If sound is enabled, then beep 3 times.
                puts "\a\a\a"
              end
              if log == "y" || log == "Y"
                # If log is enabled, writes the intrusion.
                begin
                  File.open(logname, "a") do |logf|
                    logf.puts ""
                    logf.puts " INTRUSION ATTEMPT DETECTED! from #{remoteIp}:#{remotePort} (#{Time.now.to_s})"
                    logf.puts " __________________________"
                    logf.puts reciv
                  end
                rescue Errno::ENOENT
                  puts ""
                  puts " Saving log error: No such file or directory...\n"
                  puts ""
                end
              end
              sleep(2) # This is a sticky honeypot.
              socket.write(message)
              socket.close
            end
          end
        end
      end
    rescue Errno::EACCES
      puts ""
      warning " Error: Honeypot requires root privileges\n"
      puts ""
    rescue Errno::EADDRINUSE
      puts ""
      warning " Error: Port in use\n"
      puts ""
    rescue
      puts ""
      warning " Unknown error\n"
      puts ""
    end
  end
  
  case configuration
  when "1"
    access = rand(3)
    case access
    when 0
      honeyconfig(80, "<HEAD>\n<TITLE>Access denied</TITLE>\n</HEAD>\n<H2>Access denied</H2>\n" + "<H3>HTTP Referrer login failed</H3>\n" + "<H3>IP Address login failed</H3>\n" + "<P>\n#{Time.now.to_s}\n</P>", "N", "N", "")
    when 1
      honeyconfig(80, "<HEAD>\n<TITLE>Access denied</TITLE>\n</HEAD>\n<H2>Access denied</H2>\n" + "<H3>IP Address login failed</H3>\n" + "<P>\n#{Time.now.to_s}\n</P>", "N", "N", "")
    when 2
      honeyconfig(80, "<HEAD>\n<TITLE>Access denied</TITLE>\n</HEAD>\n<H2>Access denied</H2>\n" + "<P>\n#{Time.now.to_s}\n</P>", "N", "N", "")
    end
  when "2"
    puts ""
    warning " Insert port to Open\n"
    puts ""
    warning "   Your Choice: "
    port = gets_pb.chomp
    puts ""
    warning " Insert false message to show\n"
    puts ""
    warning "   Your Choice: "
    message = gets_pb.chomp
    puts ""
    warning " Save a log with intrusions?\n"
    puts ""
    warning "   (y/n): "
    log = gets_pb.chomp
    if log == "Y" || log == "y"
      puts ""
      warning " Log file name? (incremental)\n"
      puts ""
      warning " Default: /badass/tools/bin/network/log_honeypot.txt\n"
      puts ""
      warning "   Your Choice: "
      logname = gets_pb.chomp.gsub("\"", "").gsub("'", "")
      if logname == ""
        logname = "#{dir}/log_honeypot.txt\n"
      end
    end
    puts ""
    warning " Activate beep() sound when intrusion?\n"
    puts ""
    warning "   (y/n): "
    sound = gets_pb.chomp
    honeyconfig(port, message, sound, log, logname)
  else
    puts ""
    system("clear")
    puts ""
  end
  
end
end
end
