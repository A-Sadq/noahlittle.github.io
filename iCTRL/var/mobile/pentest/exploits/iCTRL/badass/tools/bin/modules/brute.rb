#!/usr/bin/ruby
###########################################################################
###########################################################################
##  Copyright Robin Wood 2010                                            ##
##  Author: Robin Wood robin@digininja.org                               ##
##  Badass 0.8 Beta                                                      ##
##  This file is part of Badass.                                         ##
##  Badass is free software: you can redistribute it and/or modify       ##
##  it under the terms of the GNU General Public License as published by ##
##  the Free Software Foundation, either version 3 of the License, or    ##
##  (at your option) any later version.                                  ##
##  Badass is distributed in the hope that it will be useful,            ##
##  but WITHOUT ANY WARRANTY; without even the implied warranty of       ##
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        ##
##  GNU General Public License for more details.                         ##
##  You should have received a copy of the GNU General Public License    ##
##  along with Badass. If not, see http://www.gnu.org/licenses/          ##
###########################################################################
###########################################################################
## This file was modified by blass to fit in Badass                      ## 
###########################################################################
###########################################################################

require 'getoptlong'

class Brute
	@@verbose = false
	@@host = nil
	attr_accessor :verbose

	def self.set_verbose
		@@verbose=true
	end

	def self.get_host
		return @@host
	end

	def self.set_host host
		@@host=host
	end

	def dump_details
		puts "host: " + @@host
	end

	def login
		puts "no login code written"
		return true
	end

	# return blank opts
	def self.get_opts
		return [
		]

	end

	# there are no parameters to parse
	def self.parse_params opts
		begin
			opts.each do |opt, arg|
				# Nothing to do
			end
		rescue => e
			puts e
			usage
		end
	end
end
