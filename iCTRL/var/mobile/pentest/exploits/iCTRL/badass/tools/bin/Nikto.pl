#!/usr/bin/perl -w
###########################################################################
###########################################################################
##  Copyright The Resistance (C) 1995-2011                               ##
##  Author: blass                                                        ##
##  blass[at]sdf.lonestar.org @ twitter.com/Blass_o_rama                 ##
##  Badass 1.0                                                           ##
##  This file is part of Badass.                                         ##
##  Badass is free software: you can redistribute it and/or modify       ##
##  it under the terms of the GNU General Public License as published by ##
##  the Free Software Foundation, either version 3 of the License, or    ##
##  (at your option) any later version.                                  ##
##  Badass is distributed in the hope that it will be useful,            ##
##  but WITHOUT ANY WARRANTY; without even the implied warranty of       ##
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        ##
##  GNU General Public License for more details.                         ##
##  You should have received a copy of the GNU General Public License    ##
##  along with Badass. If not, see http://www.gnu.org/licenses/          ##
###########################################################################
###########################################################################

use Term::ANSIColor;
use strict;
use warnings;

use Term::ANSIColor; print color("red"), " Nikto.pl Created by blass for badass 0.2.2 Beta\n", color("reset");
print " You need Nikto installed on your system to run this feature.\n See http://cirt.net/nikto2 for download page.";

my @program;
my @A;
my @B;
my @C;
my @D;
my @E;
my @F;
my @G;
my @H;
my @I;
my @J;
my @K;
my @L;
my @M;
my @N;
my $ip;
my $output;
my $scan;

print " \n Choose your options for Scanning. \n You must run badass as root:\n\n (A) Nikto Full Scan \n (B) Nikto Dos Testing \n (C) Nikto XSS Testing \n (D) Nikto Sql Injection Testing \n (E) Nikto Remote File Retrieval - WebRoot \n (F) Nikto Remote File Retrieval - Server Wide \n (G) Nikto Command Execution / Remote Shell \n (H) Nikto Remote Source Inclusion \n (I) Nikto Information Disclosure  \n (J) Nikto Misconfiguration / Default File \n (K) Nikto Interesting File / Seen in logs \n (L) Nikto File Upload  \n (M) Nikto Authentication Bypass  \n (N) Nikto Software Identification  \n ";

print "\n  Your Choice\n\n    --> ";
$scan=<STDIN>;
chomp($scan);


if ($scan eq "A" or $scan eq "B" or $scan eq "C" or $scan eq "D" or $scan eq "E" or $scan eq "F" or $scan eq "G" or $scan eq "H" or $scan eq "I" or $scan eq "J" or $scan eq "K" or $scan eq "L" or $scan eq "M" or $scan eq "N" ) {
    print "  \n  Choose name for the log file, add .txt to the file name (ex: badass.txt) \n\n  File Name: ";
    $output=<STDIN>;
    chomp($output);
}


if ($scan eq "A" or $scan eq "B" or $scan eq "C" or $scan eq "D" or $scan eq "E" or $scan eq "F" or $scan eq "G" or $scan eq "H" or $scan eq "I" or $scan eq "J" or $scan eq "K" or $scan eq "L" or $scan eq "M" or $scan eq "N" ) {
    print "\n  Enter Host: ";
    $ip=<STDIN>;
    chomp($ip);
    print " \n";
use Term::ANSIColor; print color("red"), "  This may take several minutes...", color("reset");   
print "  "
}


if ($scan eq "A") {
@A = `nikto -host $ip -mutate 1 2 3 4 -evasion 1 2 3 4 5 6 7 8 -Display V 1 3 4 -Cgidirs ALL -Plugins ALL -Tuning 1 2 3 4 5 7 8 9 a b c -output $output`;
    print "@A\n";
}

if ($scan eq "B") {
@B = `nikto -host $ip -evasion 1 2 3 4 5 6 7 8 -Display V 1 3 4 -Tuning 6 -output $output`;
    print "@B\n";
}

if ($scan eq "C") {
@C = `nikto -host $ip -mutate 1 2 3 4 -evasion 1 2 3 4 5 6 7 8 -Display V 1 3 4 -Tuning 4 -output $output`;
    print "@C\n";
}

if ($scan eq "D") {
@D = `nikto -host $ip -mutate 1 2 3 4 -evasion 1 2 3 4 5 6 7 8 -Display V 1 3 4 -Tuning 9 -output $output`;
    print "@D\n";
}

if ($scan eq "E") {
@E = `nikto -host $ip -mutate 1 2 3 4 -evasion 1 2 3 4 5 6 7 8 -Display V 1 3 4 -Tuning 5 -output $output`;
    print "@E\n";
}

if ($scan eq "F") {
@F = `nikto -host $ip -mutate 1 2 3 4 -evasion 1 2 3 4 5 6 7 8 -Display V 1 3 4 -Tuning 7 -output $output`;
    print "@F\n";
}

if ($scan eq "G") {
@G = `nikto -host $ip -mutate 1 2 3 4 -evasion 1 2 3 4 5 6 7 8 -Display V 1 3 4 -Tuning 8 -output $output`;
    print "@G\n";
}

if ($scan eq "H") {
@H = `nikto -host $ip -mutate 1 2 3 4 -evasion 1 2 3 4 5 6 7 8 -Display V 1 3 4 -Tuning c -output $output`;
    print "H\n";
}

if ($scan eq "I") {
@I = `nikto -host $ip -mutate 1 2 3 4 -evasion 1 2 3 4 5 6 7 8 -Display V 1 3 4 -Tuning 3 -output $output`;
    print "@I\n";
}

if ($scan eq "J") {
@J = `nikto -host $ip -mutate 1 2 3 4 -evasion 1 2 3 4 5 6 7 8 -Display V 1 3 4 -Tuning 2 -output $output`;
    print "@J\n";
}

if ($scan eq "K") {
@K = `nikto -host $ip -mutate 1 2 3 4 -evasion 1 2 3 4 5 6 7 8 -Display V 1 3 4 -Tuning 1 -output $output`;
    print "@K\n";
}

if ($scan eq "L") {
@L = `nikto -host $ip -mutate 1 2 3 4 -evasion 1 2 3 4 5 6 7 8 -Display V 1 3 4 -Tuning 0 -output $output`;
    print "L\n";
}

if ($scan eq "M") {
@M = `nikto -host $ip -evasion 1 2 3 4 5 6 7 8 -Display V 1 3 4 -Tuning a -output $output`;
    print "M\n";
}


if ($scan eq "N") {
@N = `nikto -host $ip -mutate 1 2 3 4 -evasion 1 2 3 4 5 6 7 8 -Display V 1 3 4 -Tuning b -output $output`;
    print "N\n";
}

else {
    print color("red"), " Press Enter to Return\n", color("reset");
}
